<?r
	invoice = request.controller[:invoice]
	
	f = Financier::ViewFormatter.new
?>
<print>
	<heading>Invoice #{f.text invoice.number || '-'}: #{f.text invoice.name}</heading>
	
	<?r if invoice.description && !invoice.description.empty? ?>
	#{f.markdown invoice.description}
	<?r end ?>
	
	<table class="listing transactions">
		<thead>
			<tr>
				<th class="name">Name</th>
				<th class="price">Price</th>
				<th class="quantity">Quantity</th>
				<th class="subtotal">Sub-total</th>
				<th class="tax_rate">Tax</th>
				<th class="total">Total</th>
			</tr>
		</thead>
		<tbody>
			<?r 
				currencies = Set.new
				
				summary = {
					:subtotal => Latinum::Collection.new(currencies),
					:tax => Latinum::Collection.new(currencies),
					:total => Latinum::Collection.new(currencies)
				}
				
				invoice.transactions.each do |transaction|
					subtotal = transaction.subtotal
					summary[:subtotal] << subtotal
					summary[:tax] << subtotal * transaction.tax_rate.to_d
					summary[:total] << transaction.total
				
			?>
			<tr data-id="#{transaction.id}" data-rev="#{transaction.rev}">
				<th class="name">#{f.text transaction.name}</th>
				<td class="price">#{f.text transaction.price}</td>
				<td class="quantity">#{f.quantity transaction}</td>
				<td class="subtotal">#{f.text subtotal}</td>
				<td class="tax_rate">#{f.tax transaction}</td>
				<td class="total">
					#{f.text transaction.total}
					<?r if transaction.exchange_rate? ?>
					<small class="exchanged">Exchanged at #{f.text transaction.exchange_rate}</small>
					<?r end ?>
				</td>
			</tr>
			<?r if transaction.description? ?>
			<tr>
				<td class="description" colspan="6">#{f.markdown transaction.description}</td>
			</tr>
			<?r end ?>
			<?r end ?>
		</tbody>
		<tfoot>
			<?r currencies.each do |currency| ?>
			<tr>
				<td colspan="3">#{currency} Summary:</td>
				<td class="subtotal">#{f.text summary[:subtotal][currency]}</td>
				<td class="tax_rate">#{f.text summary[:tax][currency]}</td>
				<td class="total">#{f.text summary[:total][currency]}</td>
			</tr>
			<?r end ?>
		</tfoot>
	</table>
	
	<table class="company_details">
		<tbody>
			<tr>
				<th>Company:</th>
				<td>
					<span class="address">
						<span><em>Orion Transfer Ltd</em></span><br/>
						<span class="line_1">2 Derenzy Place </span><br/>
						<span class="line_2">Avonhead</span><br/>
						<span class="city">Christchurch 8042</span><br/>
						<span class="region">Canterbury, New Zealand</span><br/>
					</span>
				</td>
				<th>Payment Details:</th>
				<td>
					#{current.defer do
						node = lookup_node(Path.create("./accounts/_label"))
						render_node(node, 'account' => invoice.account) if invoice.account
					end}
				</td>
			</tr>
		</tbody>
	</table>
</print>
